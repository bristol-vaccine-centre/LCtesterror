% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Run.sims.LC_function.R
\name{run.sims.LC}
\alias{run.sims.LC}
\title{Runs multiple latent class model simulations with different parameter values.}
\arguments{
\item{num_tests}{A numeric value for the number of tests to simulate and model.}

\item{prev_vec}{Values of disease prevalence to simulate as a numeric vector for each simulation. Default = \code{c(0.2)}.}

\item{spec_vec}{Values of specificity for all tests as a numeric vector for each simulation. Default = \code{c(1)}.}

\item{sens_vec}{Values of sensitivity for all tests as a numeric vector for each simulation. Default = \code{c(1)}.}

\item{p_performed_vec}{Probability that each test is performed as a numeric vector for each simulation. Default = \code{c(1)}.}

\item{sim_size}{Number of individuals to simulate in each dataset. Default = 1000.}

\item{iter}{The number of iterations for the stan model. Default = 1000.}

\item{chains}{The number of chains for the stan model. Default = 4.}

\item{warmup}{The number of warmup iterations for the stan model. Default = 500.}

\item{stan_arg}{Optional extra arguments to pass to the rstan::sampling function. Default = NULL.}

\item{data_ID}{Optional character identifier for labeling data outputs. Default = \code{"sims"}.}

\item{prior_spec}{Specification of specificity prior. A list of length equal to the value of num_tests with each element containing a vector of length two specifying the alpha and beta parameters for the Beta prior. Default = c(10, 1) for each test.}

\item{prior_sens}{Specification of sensitivity prior. A list of length equal to the value of num_tests with each element containing a vector of length two specifying the alpha and beta parameters for the Beta prior. Default = c(1, 1) for each test.}

\item{prior_delay}{Specification of delay prior, if included in covariates. A vector of length two specifying the mu and sigma parameters for the Normal prior. Default = c(-0.5, 2).}

\item{other_priors}{List of any other priors to be specified differently to the defaults. Given as character strings as written for stan. Defaults =
list(prev_prior= "beta(1,1)", RE_prior= "normal(0,1), "bpos_prior= "gamma(1,1)", bneg_prior= "gamma(1,1)")}

\item{delay}{Logical indicating whether to simulate effects of 'delay until testing' on sensitivity. Default = FALSE.}

\item{delay_distribution}{Optional specified distribution of delay effect. A function that takes an integer \code{n} and returns a vector of length \code{n} representing individual-specific delays. Default = sample(0:14, n, replace = TRUE).}

\item{delay_effect_fn}{Optional function to simulate effects of 'delay until testing' on sensitivity. Default = function(delay_day, sens) pmax(sens - 0.02 * delay_day, 0.5)}

\item{set.seed}{Random seed for set.seed(). Default = 9876.}
}
\value{
Stan model fit and various summary outputs.
A list containing:
\describe{
\item{sim_inputs}{A data frame of all simulation input parameters per model run.
Output from sim.test.data()$test_parameters}
\item{stan_results_df}{A data frame of posterior estimates and 95\% credible intervals
for sensitivity, specificity, and prevalence for each simulation.}
\item{divergence_summary}{A data frame summarising any divergent transitions or low ESS in the Stan models.
Output from check.divergent.transitions().}
}
}
\description{
Runs multiple simulations of a bayesian LC stan model to infer true disease prevalence, test sensitivity and specificity from
simulated test data with different parameters values (prevalence, sensitivity, specificity, and probability of the test occurring).
Can simulate multiple test results but all with identical parameters.
#' Runs different parameter combinations in parallel using furrr::future_map. Need to first define future and number of cores to parallise (workers) using future::plan(future::multisession, workers= ).
This is separate to rstan parallel processing of chains which uses options(mc.cores = num_chains)
Parallel processing i.e workers >1 will not work if using devtools::load_all()
}
\details{
For each combination of sensitivity, specificity, prevalence, and test performance probability,
the function:
\enumerate{
\item Simulates test results for a population of individuals using the \code{sim.test.data()} function.
\item Fits a Bayesian latent class model using \code{run.LC.model()}.
\item Extracts posterior summaries for each test's sensitivity and specificity, as well as disease prevalence.
\item Records model diagnostics, including checking for divergent transitions.
}

Simulated test parameters and model estimates are stored in separate data frames, and intermediate
variables are cleared after each run to conserve memory.
}
\examples{
if (interactive()) {
 results <- run.sims.LC(num_tests = 4,
                       prev_vec = c(0.1, 0.2),
                       spec_vec = c(1),
                       sens_vec = c(1),
                       p_performed_vec= c(1),
                       sim_size = 100,
                       chains = 2,
                       data_ID = "sims")
}


}
