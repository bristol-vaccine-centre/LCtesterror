% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Simulating.test.data.time_functions.R
\name{sim.test.data.time}
\alias{sim.test.data.time}
\title{Simulates test data over time.}
\arguments{
\item{sim_size}{Number of individuals to simulate test results for at each timepoint. Default = 1000.}

\item{days}{Number of days to simulate. Default = 365.}

\item{test_params}{Test parameters used to simulate test results along with true prevalence. Given as a list of lists containing sensitivity (sens =), specificity (spec =), and probability that the test is performed (p_performed = ), for each test.
Default = list(test1 = list(sens = 0.99, spec = 0.99, p_performed = 1), test2 = list(sens = 0.99, spec = 0.99, p_performed = 1), test3 = list(sens = 0.98, spec = 0.98, p_performed = 0.8), test4 = list(sens = 0.98, spec = 0.98, p_performed = 0.8))}

\item{seed}{For set.seed(). Default = 953.}

\item{Est_R_window}{Size, in number of days, of sliding window for custom R(t) estimation. Default = 14.}

\item{Est_R_n_samples}{Number of samples for uncertainty estimation in custom R(t). Default = 1000.}

\item{mean_gi}{Mean generation interval used for estimating R(t) from EpiEstim. Default = 1/gamma.}

\item{max_t}{Maximum time (days) used for calculating the gi_distribution for estimating R(t) from EpiEstim. Default = 5 * mean_gi}

\item{years}{Number of years to run the SIR model. Default = 50.}

\item{N}{Population size used in the SIR model. Default = 1.}

\item{init}{Initial state of the SIR model as a list. Default = init = list(init_S = 0.99, init_I = 0.01, init_R = 0).}

\item{params}{list of SIR parameters. Includes:
\describe{
\item{beta_0}{Baseline transmission rate}
\item{desired_R0}{Desired basic reproduction number (R0) - used to calculate beta_0 if beta_0 is null.}
\item{beta_1}{Amplitude of seasonal forcing}
\item{phi}{Phase shift of seasonal forcing}
\item{gamma}{Recovery rate}
\item{omega}{Waning immunity rate}
}
Default = beta0 = NULL, desired_R0 = 2.5, beta1 = 0.07, phi = 1.5, gamma = 0.03, omega = 0.001.
If beta0 is null it is calculated as desired_R0 * gamma.}
}
\value{
A list containing:
\describe{
\item{test_parameters}{Test results table with row for each test (test_id) containing specified overall test parameters summarised across time (sens; spec; p_performed; disease_prev), simulated test_positivity, test_coverage (based on p_performed), and the estimated true disease prevalence estimate (disease_prev_est: based on the Rogan-Gladen equation) }
\item{test_results}{Simulated binary test results for each individual (N=sim_size) with a column for time (default gives day of year with max 365), based on true prev, sens and spec parameters.}
\item{sim_data}{Simulated test data, including true prevalence, true infection status, test results, and simulated PPV and NPV values for each day of the year simulated}
\item{incidence_data}{Daily test-derived and true case counts, as well as overall sensitivity and specificity (combined across all tests assuming parallel testing with any test positive assumed a disease positive).}
\item{custom_R_estimate}{Daily mean estimated R(t) based on observed (test-positive) incidence from simulated test data with test error using custom method. Contains overall sens/spec (overall across tests)}
\item{custom_R_estimate_true}{Daily mean estimated R(t) based on true incidence using custom method.Contains overall sens/spec (overall across tests)}
\item{custom_growth_rate_estimate}{Daily mean estimated growth rate and its SE from observed incidence from simulated test data with test error.Contains overall sens/spec (overall across tests)}
\item{custom_growth_rate_estimate_true}{Daily mean estimated growth rate and SE from true incidence.Contains overall sens/spec (overall across tests)}
\item{epi_R_estimate}{Daily mean R(t) estimates from EpiEstim using observed incidence from simulated test data with test error. Output from Epiestim, but contains overall sens/spec columns (overall across tests)}
\item{epi_R_estimate_true}{Daily mean R(t) estimates from EpiEstim using true incidence. Output from Epiestim, but contains overall sens/spec columns (overall across tests)}
}
}
\description{
Simulates disease prevalence over time using a simple SIR model with seasonal forcing, then uses prevalence over time to simulate test positivity with test error.
Default prevalence simulation is daily for one year and assumes a seasonal disease peak.
Returned overall sens/spec combines individual test sens/spec parameters assuming multiple parallel testing where any test positive is assumed to be a disease positive individual.
Also estimates the reproduction number from simulated prevalence data using two different methods.
Method 1: As the true prevalence data and test positivity data were simulated using an SIR model, R was calculated as R = 1 + (growth rate/recovery rate).
The growth rate (r) was calculated from the slope of the test positivity data by fitting a linear model to the log of the test positivity data over a 14-day sliding window. The recovery rate = gamma parameter value used in the SIR model.
Method 1 produces the R outputs 'custom_R_estimate' and 'custom_R_estimate_true' and the growth rate outputs 'custom_growth_rate_estimate' and 'custom_growth_rate_estimate_true'.
Method 2: Uses the EpiEstim package with method = "non_parametric_si". The si distribution is based on the mean generation interval 1/gamma.
Method 2 produces the R outputs 'epi_R_estimate' and 'epi_R_estimate_true' as returned from EpiEstim::estimate_R().
}
\examples{
if (interactive()) {
sim_data <- sim.test.data.time(sim_size = 10, days=365,
test_params = list(test1 = list(sens = 0.99, spec = 0.99, p_performed = 1),
test2 = list(sens = 0.99, spec = 0.99, p_performed = 1),
test3 = list(sens = 0.98, spec = 0.98, p_performed = 0.8),
test4 = list(sens = 0.98, spec = 0.98, p_performed = 0.8)))

#head(sim_data$test_results)
}
}
