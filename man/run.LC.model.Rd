% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Running.LC.model.dynamic_function.R
\name{run.LC.model}
\alias{run.LC.model}
\title{Runs model to infer disease prevalence from test data accounting for unknown test error.}
\arguments{
\item{data}{A dataframe of binary test results with a column for each test and row for each individual. If delay until test covariates are to be included in the model, a column with delay data for each test should be included after all of the test result data columns, in the same test order as the test result data.
If time is included, time data should be included as the last column.}

\item{num_tests}{A numeric value for the number of tests.}

\item{test_names_defined}{A character vector of identifiers / names for each test, given in the same order as the data. Default = NULL.}

\item{data_ID}{An optional name identifier for the dataset used. Default = NULL.}

\item{dependency_groups}{A list of vectors specifying dependencies between tests. All test numbers that are not independent of each other are specified in a single vector. Test numbers refer to the order they are specified in the data columns.
Example for scenario where tests 1+2 are dependent on each other and where tests 3+4 are dependent on each other: "list(c(1, 2), c(3, 4))". Default = NULL.}

\item{prior_spec}{Specification of specificity prior. A list of length equal to the value of num_tests with each element containing a vector of length two specifying the alpha and beta parameters for the Beta prior. Default = c(10, 1) for each test.}

\item{prior_sens}{Specification of sensitivity prior. A list of length equal to the value of num_tests with each element containing a vector of length two specifying the alpha and beta parameters for the Beta prior. Default = c(1, 1) for each test.}

\item{prior_delay}{Specification of delay prior, if included in covariates. A vector of length two specifying the mu and sigma parameters for the Normal prior. Default = c(-0.5, 2).}

\item{iter}{The number of iterations for the stan model. Default = 1000.}

\item{chains}{The number of chains for the stan model. Default = 4.}

\item{warmup}{The number of warmup iterations for the stan model. Default = 500.}

\item{stan_arg}{Optional extra arguments to pass to the rstan::sampling function. Default = NULL.}

\item{covariates}{Optional covariate to include in the model. Either "Time" or "Delay". If specified, relevant individual-level data must be provided in data. Default = NULL.}

\item{prior_list}{Optional list of prior distributions-specified to generate in R- to plot with posteriors.}

\item{n_samples}{If prior_list provided, number of times to samples from the specified prior distributions. Default = 1000.}

\item{model_name}{Optional name of model. Default = NULL.}

\item{plot_chains}{For plotting parameter posteriors using rstan::stan_dens, should the density for each chain be plotted? FALSE = for each parameter the draws from all chains are combined. Default = TRUE.}
}
\value{
Stan model fit and various summary outputs:
\describe{
\item{stan_fit}{Fitted stan LC model as returned from rstan::sampling.}
\item{data_inputs}{List of input data used for model fitting.}
\item{test_data_input}{Test data used for model fitting in format given to function.}
\item{stan_fit_summary_df}{A data frame summarising model parameters from rstan::summary.}
\item{prev_mean}{The estimated mean prevalence with 95\% credible intervals (in models without time).}
\item{prev_time}{In models with time: A data frame of inferred prevalence estimates over time with 95\% credible intervals.}
\item{prev_time_plot}{In models with time: Plotted inferred prevalence over time.}
\item{median_sens}{Median inferred sensitivity for each test with 95\% credible intervals.}
\item{median_spec}{Median inferred specificity for each test with 95\% credible intervals.}
\item{median_sens_spec_table}{A formatted table summarising each test's inferred sensitivity and specificity with 95\% credible intervals .}
\item{traceplots}{Plots traceplots of log posterior, and posterior density plots for prevalence, sensitivity and specifcity parameters.}
\item{pairs.plot_function}{A function to plot a pairs plot for prev, sens and spec parameters.}
\item{mean_Rhat}{The mean R-hat value across parameters.}
\item{mean_ESS}{The mean effective sample size (ESS) across parameters.}
\item{priors.posteriors.plots_function}{Plots prior vs posterior plots if prior_list was provided.}
\item{stan_code}{The generated Stan model code.}
\item{include_time}{Logical; whether time was included in the model.}
\item{include_delay}{Logical; whether delay was included in the model.}
}
}
\description{
Runs bayesian LC stan model to infer true disease prevalence from test data accounting for unknown test error.
Options to specify the number of tests, to include 'time' or 'delay' until testing as covariates, and to specify dependency relationships between tests.
Model compilation (which occurs after the code is printed) can take a few minutes.
}
\examples{
if (interactive()) {
# Example with no test dependence, delay, or time included
# Simulate data
sim_data <- sim.test.data(sim_size = 100)

# Run LC model using simulated test results
fit <- run.LC.model(sim_data$test_results, num_tests = 4,
                      data_ID = "sim", model_name = "basic_sim",
                      dependency_groups = NULL, covariates = NULL,
                      iter=1000, chains=4, warmup=500)

# View estimated prevalence, sens and spec, and traceplots
fit$prev_mean
fit$median_sens_spec_table
fit$traceplots


# Example with test dependence
# Simulate data
sim_data <- sim.test.data(sim_size = 100)

# Run LC model using simulated test results
fit <- run.LC.model(sim_data$test_results, num_tests = 4,
                      data_ID = "sim", model_name = "dependence_sim",
                      dependency_groups = list(c(1, 2), c(3, 4)), covariates = NULL,
                      iter=1000, chains=4, warmup=500)


# Example with 'delay until test' data
# Simulate data
sim_data <- sim.test.data(sim_size = 100, delay=TRUE)

# Run LC model using simulated test results
fit <- run.LC.model(sim_data$test_results, num_tests = 4,
                      data_ID = "sim_delay", model_name = "delay_sim",
                      dependency_groups = NULL, covariates = c("delay"),
                      iter=1000, chains=4, warmup=500)


# Example with changing prevalence over time (for a disease with a seasonal peak)
# Simulate data
sim_data <- sim.test.data.time(sim_size = 10)

# Run LC model using simulated test results
fit <- run.LC.model(sim_data$test_results, num_tests = 4,
                      data_ID = "sim_time", model_name = "time_sim",
                      dependency_groups = NULL, covariates = c("time"),
                      iter=1000, chains=4, warmup=500)

# Plot prev over time
plots <- plot.prev.time(fit, sim_time_data = sim_data)
plots$weekly_prev_plot
}

}
