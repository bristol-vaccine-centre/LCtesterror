% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Generate.stan.LCmodel.DynamicPrior_function.R
\name{generate.stan.model}
\alias{generate.stan.model}
\title{Generates stan model code for different model versions.}
\usage{
generate.stan.model(
  num_tests,
  include_time = FALSE,
  include_delay = FALSE,
  dependency_groups = list()
)
}
\arguments{
\item{num_tests}{Number of tests in data.}

\item{include_time}{Logical indicating whether time should be included in the model. Default = FALSE.}

\item{include_delay}{Logical indicating whether delay until testing should be included in the model. Default = FALSE.}

\item{dependency_groups}{A list of vectors specifying dependencies between tests. All test numbers that are not independent of each other are specified in a single vector. Test numbers refer to the order they are specified in the data columns.
Example for scenario where tests 1+2 are dependent on each other and where tests 3+4 are dependent on each other: "list(c(1, 2), c(3, 4))". Default = NULL.}
}
\value{
Stan LC model code.
}
\description{
Generates stan model code for different LC model versions.
Options to specify the number of tests, to include 'time' or 'delay' until testing as covariates (but not both), and to specify dependency relationships between tests.
The prior distributions for specificity and sensitivity can be specified as beta distributions.
Function is automatically used in run.LC.model() function
}
\examples{
if (interactive()) {
# Basic model with 4 tests:
generate.stan.model(num_tests = 4)

# Model with 4 tests that have a dependence structure
# (in this example tests 1+2 are correlated and tests 3+4 are correlated):
generate.stan.model(num_tests = 4, dependency_groups = list(c(1, 2), c(3, 4)))

# Model with 4 tests and delay or time modelled as a covariate:
generate.stan.model(num_tests = 4, include_delay = TRUE)
generate.stan.model(num_tests = 4, include_time = TRUE)

# Model with 4 tests that have a dependence structure
# (in this example tests 1 is independent and tests 3+4 are correlated)
# and have either delay or time covariates:
generate.stan.model(num_tests = 4, dependency_groups = list(c(1), c(2, 3, 4)), include_delay = TRUE)
generate.stan.model(num_tests = 4, dependency_groups = list(c(1), c(2, 3, 4)), include_time = TRUE)
}

}
